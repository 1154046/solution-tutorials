{
  "tags": [
    "Cloud Foundry",
    "Cloud Functions",
    "Kubernetes",
    "虚拟服务器"
  ],
  "categories": [
    {
      "name": "Web 站点和 Web 应用程序",
      "anchor": "websites",
      "solutions": [
        {
          "name": "Kubernetes 上可缩放的 Web 应用程序",
          "url": "scalable-webapp-kubernetes.html",
          "description": "搭建 Java Web 应用程序脚手架，在容器中本地运行该应用程序，然后将其部署到 Kubernetes 集群。此外，绑定定制域，监视环境的运行状况和进行缩放。",
          "imgSrc": "images/solution2/Architecture.png",
          "tags": [
            "Docker",
            "Kubernetes",
            "Container Service",
            "容器注册表",
            "Java"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "将基于 VM 的应用程序移动到 Kubernetes",
          "url": "vm-to-containers-and-kubernetes.html",
          "description": "采用基于 VM 的应用程序，对其进行容器化，然后将其部署到 Kubernetes 集群。请将这些步骤用作其他应用程序的一般指南。",
          "imgSrc": "images/solution30/modern_architecture.png",
          "tags": [
            "Kubernetes",
            "Container Service",
            "File Storage",
            "MySQL",
            "Java"
          ],
          "lastUpdated": "2019 年 4 月 15 日"
        },
        {
          "name": "弹性应用程序的策略",
          "url": "strategies-for-resilient-applications.html",
          "description": "无论计算选项是什么：Kubernetes、Cloud Foundry、Cloud Functions 或虚拟服务器，企业都在寻求最大限度地减少停机时间，并创建可实现最大可用性的弹性体系结构。",
          "imgSrc": "images/solution39/Architecture.png",
          "tags": [
            "Kubernetes",
            "Cloud Foundry",
            "Cloud Functions",
            "虚拟服务器",
            "Bare Metal",
            "Databases",
            "File Storage",
            "Watson"
          ],
          "lastUpdated": "2019 年 3 月 11 日"
        },
        {
          "name": "持续部署到 Kubernetes",
          "url": "continuous-deployment-to-kubernetes.html",
          "description": "为 Kubernetes 中运行的容器化应用程序设置持续集成和交付管道。向安全性扫描程序、Slack 通知和分析等其他服务添加集成。",
          "imgSrc": "images/solution21/Architecture.png",
          "tags": [
            "Kubernetes",
            "Container Service",
            "Docker",
            "Slack",
            "DevOps",
            "Node.js",
            "漏洞顾问程序"
          ],
          "lastUpdated": "2019 年 4 月 15 日"
        },
        {
          "name": "使用 Object Storage 和 CDN 加速交付静态文件",
          "url": "static-files-cdn.html?pos=2",
          "description": "在 Cloud Object Storage 中托管和提供 Web 站点资产（图像、视频和文档）和用户生成的内容，以及使用 Content Delivery Network (CDN) 快速、安全地向世界各地的用户交付内容。",
          "imgSrc": "images/solution3/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Node.js",
            "Content Delivery Network",
            "Cloud Object Storage"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 Object Storage 和发布/预订消息传递进行异步数据处理",
          "url": "pub-sub-object-storage.html",
          "description": "使用基于 Apache Kafka 的消息中心来协调在 Kubernetes 集群中运行的微服务之间的工作负载，并将数据存储在 Object Storage 中。",
          "imgSrc": "images/solution25/Architecture.png",
          "tags": [
            "Kubernetes",
            "Node.js",
            "Java",
            "消息中心",
            "Cloud Object Storage"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "LAMP 堆栈上的 Web 应用程序",
          "url": "lamp-stack.html",
          "description": "创建使用 Apache Web 服务器、MySQL 和 PHP 的 Ubuntu Linux 虚拟服务器。然后在 LAMP 堆栈上安装并配置 WordPress 开放式源代码应用程序。",
          "imgSrc": "images/solution4/Architecture.png",
          "tags": [
            "虚拟服务器",
            "PHP",
            "WordPress",
            "漏洞扫描程序"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 Terraform 部署 LAMP 堆栈",
          "url": "infrastructure-as-code-terraform.html",
          "description": "使用 Terraform 供应使用 Apache Web 服务器、MySQL、PHP 和 IBM Cloud Object Storage 服务的 Linux 虚拟服务器。更新配置以缩放资源并调整环境。",
          "imgSrc": "images/solution10/architecture-2.png",
          "tags": [
            "Terraform",
            "虚拟服务器",
            "PHP",
            "Object Storage"
          ],
          "lastUpdated": "2019 年 4 月 23 日"
        },
        {
          "name": "规划、创建和更新部署环境",
          "url": "plan-create-update-deployments.html",
          "description": "使用 IBM Cloud CLI 和 Terraform 自动创建和维护多个部署环境。",
          "imgSrc": "images/solution26-plan-create-update-deployments/architecture.png",
          "tags": [
            "Terraform",
            "Kubernetes",
            "Cloud Foundry",
            "Identity and Access Management"
          ],
          "lastUpdated": "2019 年 4 月 29 日"
        },
        {
          "name": "使用虚拟服务器构建具备高可用性和高可缩放性的 Web 应用程序",
          "url": "highly-available-and-scalable-web-application.html",
          "description": "创建一个负载均衡器、两个应用服务器（在安装了 NGINX 和 PHP 的 Ubuntu 上运行）、一个 MySQL 数据库服务器以及一个持久文件存储器（用于存储应用程序文件和备份）。",
          "imgSrc": "images/solution14/Architecture.png",
          "tags": [
            "虚拟服务器",
            "负载均衡器",
            "PHP",
            "File Storage"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 MEAN 堆栈的现代 Web 应用程序",
          "url": "mean-stack.html",
          "description": "使用常用的 MEAN 堆栈（Mongo DB、Express、Angular 和 Node.js）构建 Web 应用程序。在本地运行应用程序，创建和使用数据库即服务，部署应用程序以及监视应用程序。",
          "imgSrc": "images/solution7/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Node.js",
            "Compose for MongoDB"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "用于云数据的 SQL 数据库",
          "url": "sql-database.html",
          "description": "供应 SQL 关系数据库服务，创建表以及将大型数据集装入到数据库中。部署 Web 应用程序，以利用这些数据并显示如何访问云数据库。",
          "imgSrc": "images/solution5/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Python",
            "Db2 Warehouse"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "无服务器 Web 应用程序和 API",
          "url": "serverless-api-webapp.html",
          "description": "通过在 GitHub Pages 上托管静态 Web 站点内容，并使用 Cloud Functions 实现应用程序后端来创建无服务器 Web 应用程序。",
          "imgSrc": "images/solution8/Architecture.png",
          "tags": [
            "Cloud Functions",
            "API 网关",
            "Cloudant NoSQL DB"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "跨多个区域部署无服务器应用程序",
          "url": "multi-region-serverless.html",
          "description": "使用 Cloud Functions 和 Internet Services 构建全球可用的安全无服务器应用程序。",
          "imgSrc": "images/solution44-multi-region-serverless/Architecture.png",
          "tags": [
            "Internet Services",
            "Cloud Functions",
            "Certificate Manager"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 LogDNA 和 Sysdig 分析日志并监视应用程序运行状况",
          "url": "application-log-analysis.html",
          "description": "使用 IBM Log Analysis with LogDNA 了解应用程序活动并对其进行诊断。使用 IBM Cloud Monitoring with Sysdig 监视应用程序。",
          "imgSrc": "images/solution12/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Python",
            "Log Analysis",
            "Availability Monitoring"
          ],
          "lastUpdated": "2019 年 4 月 29 日"
        },
        {
          "name": "隔离的 Cloud Foundry 企业应用程序",
          "url": "isolated-cloud-foundry-enterprise-apps.html",
          "description": "通过使用 Cloud Foundry Enterprise Environment 部署隔离的企业级 Cloud Foundry 平台，为组织提供创新平台。",
          "imgSrc": "images/solution45-CFEE-apps/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Cloud Foundry Enterprise Environment",
            "Node.js",
            "Kubernetes"
          ],
          "featuredPosition": 2,
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "聊天机器人",
      "anchor": "chatbots",
      "solutions": [
        {
          "name": "构建数据库驱动的 Slack 机器人",
          "url": "slack-chatbot-database-watson.html?pos=2",
          "description": "使用 IBM Watson Assistant、Cloudant 和 IBM Cloud Functions 构建数据库驱动的 Slack 机器人。",
          "imgSrc": "images/solution19/SlackbotArchitecture.png",
          "tags": [
            "Cloud Foundry",
            "IBM Watson Assistant",
            "Cloudant NoSQL DB",
            "Db2 Warehouse",
            "Cloud Functions",
            "Slack"
          ],
          "lastUpdated": "2019 年 4 月 22 日"
        },
        {
          "name": "构建支持声音的 Android 聊天机器人",
          "url": "android-watson-chatbot.html",
          "description": "定义意向和实体，并为聊天机器人构建对话流以响应客户的查询。启用 Speech to Text 和 Text to Speech 服务以与 Android 应用程序进行轻松交互。",
          "imgSrc": "images/solution28-watson-chatbot-android/architecture.png",
          "tags": [
            "IBM Watson Assistant",
            "Speech to Text",
            "Text to Speech",
            "Android"
          ],
          "lastUpdated": "2019 年 4 月 29 日"
        }
      ]
    },
    {
      "name": "安全性",
      "anchor": "security",
      "solutions": [
        {
          "name": "跨多个区域保护 Web 应用程序",
          "url": "multi-region-webapp.html?pos=2",
          "description": "使用持续交付管道跨多个区域对 Web 应用程序进行创建、保护和部署和负载均衡。",
          "imgSrc": "images/solution1/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Node.js",
            "Continuous Delivery",
            "Cloud Internet Services"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "富有弹性且安全的多区域 Kubernetes 集群",
          "url": "multi-region-k8s-cis.html?pos=2",
          "description": "将 Cloud Internet Services 与 Kubernetes 集群集成，以交付跨多个区域的富有弹性且安全的解决方案。",
          "imgSrc": "images/solution32-multi-region-k8s-cis/Architecture.png",
          "tags": [
            "Kubernetes",
            "容器注册表",
            "Cloud Internet Services"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "创建、保护和管理 REST API",
          "url": "create-manage-secure-apis.html",
          "description": "使用 LoopBack Node.js API 框架创建新的 REST API。使用 IBM Cloud 上的 API Connect 服务向 API 添加管理、可视性、安全性和速率限制。",
          "imgSrc": "images/solution13/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Node.js",
            "API Connect"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "将端到端安全性应用于云应用程序",
          "url": "cloud-e2e-security.html",
          "description": "创建安全的云应用程序，其数据使用您自己的密钥加密，并通过用户认证和安全审计进行保护。",
          "imgSrc": "images/solution34-cloud-e2e-security/Architecture.png",
          "featuredPosition": 1,
          "tags": [
            "Kubernetes",
            "加密",
            "安全性",
            "App ID",
            "Cloud Object Storage",
            "Key Protect",
            "Activity Tracker"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "移动",
      "anchor": "mobile",
      "solutions": [
        {
          "name": "使用 Push Notifications 的 iOS 移动应用程序",
          "url": "ios-mobile-push-analytics.html",
          "description": "在 IBM Cloud 上创建使用 Push Notifications 的 iOS Swift 应用程序。",
          "imgSrc": "images/solution6/Architecture.png",
          "tags": [
            "iOS",
            "Swift",
            "Push Notifications"
          ],
          "lastUpdated": "2019 年 3 月 8 日"
        },
        {
          "name": "使用 Push Notifications 的 Android 本机移动应用程序",
          "url": "android-mobile-push-analytics.html",
          "description": "在 IBM Cloud 上编写使用 Push Notifications 的 Android 本机应用程序。",
          "imgSrc": "images/solution9/Architecture.png",
          "tags": [
            "Android",
            "Java",
            "Push Notifications"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 Push Notifications 的混合移动应用程序",
          "url": "hybrid-mobile-push-analytics.html",
          "description": "在 IBM Cloud 上开发使用 Push Notifications 的混合 Cordova 应用程序。",
          "imgSrc": "images/solution15/Architecture.png",
          "tags": [
            "Cordova",
            "Push Notifications"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用无服务器后端的移动应用程序",
          "url": "serverless-mobile-backend.html?pos=2",
          "description": "将 Cloud Functions 与认知和数据服务一起使用，为移动应用程序构建无服务器后端。",
          "imgSrc": "images/solution11/Architecture.png",
          "tags": [
            "Cloud Functions",
            "App ID",
            "Cloudant NoSQL DB",
            "Watson Tone Analyzer",
            "Push Notifications"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "机器学习和分析",
      "anchor": "ml",
      "solutions": [
        {
          "name": "通过流式分析和 SQL 使用大数据日志",
          "url": "big-data-log-analytics.html",
          "description": "收集、存储和分析日志记录，以满足法规要求并帮助发现信息。通过发布/预订消息传递，将解决方案扩展到数百万条记录，然后使用熟悉的 SQL 对持久存储的日志执行分析。",
          "imgSrc": "images/solution31/Architecture.png",
          "tags": [
            "Cloud Object Storage",
            "Event Streams",
            "SQL Query",
            "Streaming Analytics"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 Object Storage 构建数据湖",
          "url": "smart-data-lake.html",
          "description": "为数据研究员提供多种工具，用于通过 SQL Query 查询数据，并在 Watson Studio 中执行分析。通过交互式图表分享数据和洞察。",
          "imgSrc": "images/solution29/architecture.png",
          "tags": [
            "Cloud Object Storage",
            "SQL Query",
            "Watson Studio"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "将无服务器与 Cloud Foundry 组合用于数据检索和分析",
          "url": "serverless-github-traffic-analytics.html?pos=2",
          "description": "自动收集存储库的 GitHub 流量统计信息，将其存储在 SQL 数据库中，然后开始使用流量分析。",
          "imgSrc": "images/solution24-github-traffic-analytics/Architecture.png",
          "tags": [
            "Db2 Warehouse",
            "App ID",
            "Cloud Functions",
            "GitHub"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "构建、部署、测试和重新训练预测性机器学习模型",
          "url": "create-deploy-retrain-machine-learning-model.html",
          "description": "构建预测性机器学习模型，将其部署为 API，测试模型并使用反馈数据重新训练模型。",
          "imgSrc": "images/solution22-build-machine-learning-model/architecture_diagram.png",
          "tags": [
            "Machine Learning",
            "Apache Spark",
            "Watson Studio",
            "Cloud Object Storage",
            "Db2 Warehouse"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "使用 Apache Spark 分析和显示开放数据",
          "url": "big-data-analytics-spark.html",
          "description": "使用 Jupyter Notebook 分析和显示开放数据集。将 Apache Spark 服务与 IBM Watson Studio 和 Pixiedust 配合使用以生成图形。",
          "imgSrc": "images/solution23/Architecture.png",
          "tags": [
            "Apache Spark",
            "Watson Studio",
            "Cloud Object Storage"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "Internet of Things",
      "anchor": "iot",
      "solutions": [
        {
          "name": "收集、显示和分析 IoT 数据",
          "url": "gather-visualize-analyze-iot-data.html",
          "description": "设置 IoT 设备，在 Watson IoT Platform 中收集大量数据，使用机器学习分析数据，然后创建可视化。",
          "imgSrc": "images/solution16/Architecture.png",
          "tags": [
            "Cloud Foundry",
            "Internet of Things Platform",
            "Cloudant",
            "Watson Studio",
            "Apache Spark",
            "Cloud Object Storage"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "Identity and Access Management",
      "anchor": "iam",
      "solutions": [
        {
          "name": "关于组织用户、团队、应用程序的最佳实践",
          "url": "users-teams-applications.html",
          "description": "概要介绍 IBM Cloud 中提供的用于管理身份和访问权管理的概念，以及如何实现这些概念以支持应用程序的多个开发阶段。",
          "imgSrc": "images/solution20-users-teams-applications/architecture.png",
          "tags": [
            "Identity and Access Management",
            "Kubernetes",
            "Container Service",
            "容器注册表",
            "DevOps"
          ],
          "lastUpdated": "2019 年 4 月 19 日"
        },
        {
          "name": "查看 IBM Cloud 服务、资源和使用情况",
          "url": "cloud-usage.html",
          "description": "介绍用于回答常见使用情况相关问题的各种方法。",
          "imgSrc": "images/solution38/Architecture.png",
          "tags": [
            "Identity and Access Management",
            "Cloud Foundry",
            "用法",
            "计费"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    },
    {
      "name": "网络",
      "anchor": "网络",
      "solutions": [
        {
          "name": "Virtual Private Cloud 中的专用和公共子网",
          "url": "vpc-public-app-private-backend.html",
          "description": "使用子网和实例创建虚拟私有云。通过附加安全组来保护资源，并且只允许最低访问权。",
          "imgSrc": "images/solution40-vpc-public-app-private-backend/Architecture.png",
          "tags": [
            "基础架构",
            "虚拟私有云",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 4 月 2 日"
        },
        {
          "name": "跨多个位置和专区部署隔离工作负载",
          "url": "vpc-multi-region.html",
          "description": "在跨多个专区和区域的虚拟私有云中部署工作负载。使用本地和全局负载均衡器在各专区之间分发流量。",
          "imgSrc": "images/solution41-vpc-multi-region/Architecture.png",
          "tags": [
            "基础架构",
            "虚拟私有云",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 4 月 2 日"
        },
        {
          "name": "使用 VPC/VPN 网关对云资源进行安全的专用内部部署访问",
          "url": "vpc-site2site-vpn.html",
          "description": "通过安全的虚拟专用网将虚拟私有云连接到其他计算环境并使用 IBM Cloud 服务。",
          "imgSrc": "images/solution46-vpc-vpn/ArchitectureDiagram.png",
          "tags": [
            "基础架构",
            "虚拟私有云",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 5 月 2 日"
        },
        {
          "name": "使用防御主机安全地访问远程实例",
          "url": "vpc-secure-management-bastion-server.html",
          "description": "部署防御主机以安全地访问虚拟私有云中的远程实例。",
          "imgSrc": "images/solution47-vpc-secure-management-bastion-server/ArchitectureDiagram.png",
          "tags": [
            "基础架构",
            "虚拟私有云",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 4 月 2 日"
        },
        {
          "name": "使用安全专用网络隔离工作负载",
          "url": "secure-network-enclosure.html",
          "description": "配置虚拟路由器设备以创建安全隔离区。关联 VLAN，供应服务器，设置 IP 路由和防火墙。",
          "imgSrc": "images/solution33-secure-network-enclosure/Secure-priv-enc.png",
          "tags": [
            "基础架构",
            "Vyatta",
            "防火墙",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 3 月 8 日"
        },
        {
          "name": "配置 NAT 以从专用网络访问因特网",
          "url": "nat-config-private.html",
          "description": "使用 NAT masquerade 将专用 IP 地址转换为出站公共接口。",
          "imgSrc": "images/solution35-nat-config-private/vra-nat.png",
          "tags": [
            "基础架构",
            "Vyatta",
            "防火墙",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "自带 IP 地址",
          "url": "byoip.html",
          "description": "概要介绍 BYOIP 实施模式并提供确定相应模式的指南。",
          "imgSrc": "images/solution37-byoip/byoipdecision.png",
          "tags": [
            "基础架构",
            "Vyatta",
            "防火墙",
            "网络"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "通过 VPN 连接到安全专用网络中",
          "url": "configuring-IPSEC-VPN.html",
          "description": "在远程网络环境和 IBM Cloud 专用网络上的服务器之间创建专用连接。",
          "imgSrc": "images/solution36-configuring-IPSEC-VPN/sec-priv-vpn.png",
          "tags": [
            "基础架构",
            "Vyatta",
            "防火墙",
            "网络",
            "虚拟服务器"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "通过 IBM 网络链接安全专用网络",
          "url": "vlan-spanning.html",
          "description": "部署两个专用网络，这两个专用网络使用 VLAN 生成服务通过 IBM Cloud 专用网络进行安全链接。",
          "imgSrc": "images/solution43-vlan-spanning/vlan-spanning.png",
          "tags": [
            "基础架构",
            "Vyatta",
            "防火墙",
            "网络",
            "虚拟服务器",
            "VLAN 生成"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        },
        {
          "name": "从安全专用网络提供服务的 Web 应用程序",
          "url": "web-app-private-network.html",
          "description": "创建一个可缩放且安全的面向因特网的 Web 应用程序，该应用程序托管在通过虚拟路由器设备 (VRA)、VLAN、NAT 和防火墙进行保护的专用网络中。",
          "imgSrc": "images/solution42-web-app-private-network/web-app-private.png",
          "tags": [
            "基础架构",
            "防火墙",
            "负载均衡器",
            "网络",
            "虚拟服务器",
            "虚拟路由器设备 VPN"
          ],
          "lastUpdated": "2019 年 3 月 7 日"
        }
      ]
    }
  ]
}
